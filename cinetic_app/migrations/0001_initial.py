# Generated by Django 4.1 on 2022-09-04 16:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('codigo_User', models.CharField(max_length=100, unique=True)),
                ('direccion', models.CharField(max_length=100)),
                ('telefono', models.CharField(max_length=20)),
                ('fecha_nacimiento', models.DateField(null=True)),
                ('pseudonym_User', models.CharField(max_length=100)),
                ('key_User', models.CharField(max_length=100)),
                ('token', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Combo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_Combo', models.CharField(max_length=100, unique=True)),
                ('products_Combo', models.CharField(max_length=100)),
                ('price_Como', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_Film', models.CharField(max_length=100, unique=True)),
                ('name_Film', models.CharField(max_length=100)),
                ('state_Film', models.CharField(max_length=100)),
                ('class_Film', models.CharField(max_length=100)),
                ('runningTime_Film', models.CharField(max_length=100)),
                ('quality_Film', models.CharField(max_length=100)),
                ('language_Film', models.CharField(max_length=100)),
                ('dubbing_Film', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_Loc', models.CharField(max_length=100, unique=True)),
                ('name_Loc', models.CharField(max_length=100)),
                ('city_Loc', models.CharField(max_length=100)),
                ('email_Loc', models.CharField(max_length=100)),
                ('tel_Loc', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_Sala', models.CharField(max_length=100, unique=True)),
                ('name_Sala', models.CharField(max_length=100)),
                ('price_Sala', models.CharField(max_length=100)),
                ('quantity_Sala', models.CharField(max_length=100)),
                ('layout_Sala', models.CharField(max_length=100)),
                ('schedule_Sala', models.CharField(max_length=100)),
                ('codigo_Loc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.location')),
            ],
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_Venta', models.CharField(max_length=100, unique=True)),
                ('ticketDate_Venta', models.DateField(null=True)),
                ('totalPrice', models.CharField(max_length=1000)),
                ('codigo_User', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Snack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_Snack', models.CharField(max_length=100, unique=True)),
                ('name_Snack', models.CharField(max_length=100)),
                ('synopsis_Snack', models.CharField(max_length=100)),
                ('price_Snack', models.CharField(max_length=100)),
                ('id_Combo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.combo')),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_Seat', models.CharField(max_length=100, unique=True)),
                ('row_Seat', models.IntegerField()),
                ('column_Seat', models.IntegerField()),
                ('state_Seat', models.CharField(max_length=100)),
                ('codigo_Combo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.combo')),
                ('codigo_Loc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.location')),
                ('codigo_Sala', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.sala')),
            ],
        ),
        migrations.CreateModel(
            name='Recibo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_Rec', models.CharField(max_length=100, unique=True)),
                ('date_Rec', models.DateField(null=True)),
                ('totalValue_Rec', models.CharField(max_length=100)),
                ('codigo_Venta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.venta')),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='codigo_Venta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.venta'),
        ),
        migrations.CreateModel(
            name='Cust',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_Cust', models.CharField(max_length=100, unique=True)),
                ('name_Cust', models.CharField(max_length=100)),
                ('lnames_Cust', models.CharField(max_length=100)),
                ('tel_Cust', models.CharField(max_length=100)),
                ('codigo_Venta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.venta')),
            ],
        ),
        migrations.AddField(
            model_name='combo',
            name='id_Rec',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinetic_app.recibo'),
        ),
    ]
